<?php
/**
 * KnowledgeBase.
 *
 * @copyright Axel Guckelsberger
 * @link http://zikula.org
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package KnowledgeBase
 * @author Axel Guckelsberger.
 * @url https://guite.de
 * @version Generated by ModuleStudio 0.5.2 (http://modulestudio.de) at Thu Feb 17 14:43:00 CET 2011.
 */

/**
 * Generic item list content plugin base class
 */
class KnowledgeBase_Api_Base_ContentTypes_itemListPlugin extends contentTypeBase
{
    private $objectType;
    private $sorting;
    private $amount;
    private $template;
    private $filter;

    public function getModule()
    {
        return 'KnowledgeBase';
    }

    public function getName()
    {
        return 'itemlist';
    }

    public function getTitle()
    {
        $dom = ZLanguage::getModuleDomain('KnowledgeBase');
        return __('KnowledgeBase items', $dom);
    }

    public function getDescription()
    {
        $dom = ZLanguage::getModuleDomain('KnowledgeBase');
        return __('Display KnowledgeBase items.', $dom);
    }

    public function loadData(&$data)
    {
        if (!isset($data['objectType']) || !in_array($vars['objectType'], KnowledgeBase_Util_Controller::getObjectTypes('contentType'))) {
            $data['objectType'] = KnowledgeBase_Util_Controller::getDefaultObjectType('contentType');
        }

        $this->objectType = $data['objectType'];

        if (!isset($data['sorting']))
            $data['sorting'] = 'default';
        if (!isset($data['amount']))
            $data['amount'] = 1;
        if (!isset($data['template']))
            $data['template'] = 'itemlist_' . ucwords($this->objectType) . '_display.tpl';
        if (!isset($data['filter']))
            $data['filter'] = '';

        $this->sorting = $data['sorting'];
        $this->amount = $data['amount'];
        $this->template = $data['template'];
        $this->filter = $data['filter'];
    }

    public function display()
    {
        $dom = ZLanguage::getModuleDomain('KnowledgeBase');

        $objectType = $this->objectType;

        // instantiate a new collection corresponding to $objectType
        $objectCollection = KnowledgeBase_Factory::getBusinessCollection($objectType, 'contentType', array('controller' => 'itemList', 'action' => 'loadData'));

        $sortParam = '';
        if ($this->sorting == 'random')
            $sortParam = 'RAND()';
        elseif ($this->sorting == 'newest')
            $sortParam = $objectCollection->get_intIdField() . ' DESC';
        elseif ($this->sorting == 'default')
            $sortParam = $objectCollection->get_intDefaultSortingField() . ' ASC';

        $resultsPerPage = (($this->amount) ? $this->amount : 1);

        // get objects from database
        // while the result will be saved in the object, we assign in to a local variable for convenience.
        $objectData = $objectCollection->selectWherePaginated($this->filter, $sortParam, -1, $resultsPerPage);

        // get total number of records for building the pagination by method call
        //$objectCount = $objectCollection->selectCount($where);

        $this->view->setCaching(true);

        $data = array('objectType' => $this->objectType, 'sorting' => $this->sorting, 'amount' => $this->amount, 'filter' => $this->filter, 'template' => $this->template);

        // assign block vars and fetched data
        $this->view->assign('vars', $data)
            ->assign('objectType', $this->objectType)
            ->assign('items', $objectData);

        $output = '';
        if (!empty($this->template) && $this->view->template_exists('contenttype/' . $this->template)) {
            $output = $this->view->fetch('contenttype/' . $this->template);
        }
        $templateForObjectType = str_replace('itemlist_', 'itemlist_' . ucwords($this->objectType) . '_', $this->template);
        if ($this->view->template_exists('contenttype/' . $templateForObjectType)) {
            $output = $this->view->fetch('contenttype/' . $templateForObjectType);
        } elseif ($this->view->template_exists('contenttype/' . $this->template)) {
            $output = $this->view->fetch('contenttype/' . $this->template);
        } else {
            $output = $this->view->fetch('contenttype/itemlist_display.tpl');
        }

        return $output;
    }

    public function displayEditing()
    {
        return $this->display();
    }

    public function getDefaultData()
    {
        return array('objectType' => 'ticket',
            'sorting'    => 'default',
            'amount'     => 1,
            'template'   => 'itemlist_display.html',
            'filter'     => '');
    }

    public function startEditing($view)
    {
        $dom = ZLanguage::getModuleDomain('KnowledgeBase');
        array_push($view->plugins_dir, 'modules/KnowledgeBase/templates/plugins');
    }
}
